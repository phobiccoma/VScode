"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.unwrapOrElseAsyncFromOption = void 0;
var assert_1 = require("../internal/assert");
var ErrorMessage_1 = require("../internal/ErrorMessage");
var Option_1 = require("./Option");
var unwrap_1 = require("./unwrap");
/**
 *  Unwraps a result _input_, returns the content of an `Some(T)`.
 *  If the value is an `None` then it calls `def` with its value.
 */
function unwrapOrElseAsyncFromOption(input, recoverer) {
    if (Option_1.isSome(input)) {
        var val = unwrap_1.unwrapOption(input);
        return Promise.resolve(val);
    }
    var defaultValue = recoverer();
    // If this is async function, this always return Promise, but not.
    // We should check to clarify the error case if user call this function from plain js
    // and they mistake to use this.
    assert_1.assertIsPromise(defaultValue, ErrorMessage_1.ERR_MSG_RECOVERER_MUST_RETURN_PROMISE);
    return defaultValue;
}
exports.unwrapOrElseAsyncFromOption = unwrapOrElseAsyncFromOption;
