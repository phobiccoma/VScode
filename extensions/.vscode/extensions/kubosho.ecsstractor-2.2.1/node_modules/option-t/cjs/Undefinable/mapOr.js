"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mapOrForUndefinable = void 0;
var ErrorMessage_1 = require("./ErrorMessage");
var expect_1 = require("./expect");
/**
 *  Return the result of _transformer_ with using _input_ as an argument for it if _input_ is not `undefined`.
 *  Otherwise, return _defaultValue_.
 *
 *  Basically, this operation is a combination `map()` and `unwrapOr()`.
 *
 *  * `U` must not be `Undefinable<*>`.
 *      * If the result of _transformer_ is `undefined`, this throw an `Error`.
 *      * If the result of _defaultValue_ is `undefined`, this throw an `Error`.
 *  * If you'd like to accept `Undefinable<*>` as `U`, use a combination `andThen()` and `or()`.
 */
function mapOrForUndefinable(input, defaultValue, transformer) {
    var result;
    var msg = '';
    if (input !== undefined) {
        result = transformer(input);
        msg = ErrorMessage_1.ERR_MSG_TRANSFORMER_MUST_NOT_RETURN_NO_VAL_FOR_UNDEFINABLE;
    }
    else {
        result = defaultValue;
        msg = ErrorMessage_1.ERR_MSG_DEFAULT_VALUE_MUST_NOT_BE_NO_VAL_FOR_UNDEFINABLE;
    }
    var passed = expect_1.expectNotUndefined(result, msg);
    return passed;
}
exports.mapOrForUndefinable = mapOrForUndefinable;
