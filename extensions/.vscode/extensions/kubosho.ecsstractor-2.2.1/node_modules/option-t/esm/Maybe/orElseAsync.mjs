import { assertIsPromise } from "../internal/assert.mjs";
import { ERR_MSG_RECOVERER_MUST_RETURN_PROMISE } from "../internal/ErrorMessage.mjs";
import { isNotNullAndUndefined } from "./Maybe.mjs";
/**
 *  Return _input_ as `T` if the passed _input_ is not `null` and `undefined`.
 *  Otherwise, return the result of _recoverer_.
 */

export function orElseAsyncForMaybe(input, recoverer) {
  if (isNotNullAndUndefined(input)) {
    return Promise.resolve(input);
  }

  var fallback = recoverer(); // If this is async function, this always return Promise, but not.
  // We should check to clarify the error case if user call this function from plain js
  // and they mistake to use this.

  assertIsPromise(fallback, ERR_MSG_RECOVERER_MUST_RETURN_PROMISE);
  return fallback;
}