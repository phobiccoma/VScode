import { createSome, createNone, isNone } from "../PlainOption/Option.mjs";
import { isErr, createOk, createErr } from "./Result.mjs";
/**
 *  Transposes a `Result` of an `Option` into an `Option` of a `Result`.
 *
 *  - `Ok(Some(v))` -> `Some(Ok(v))`
 *  - `Ok(None)` -> `None`
 *  - `Err(e)` -> `Some(Err(e))`
 */

export function transposeForResult(input) {
  if (isErr(input)) {
    var e = input.err;
    var newErr = createErr(e);
    var result_1 = createSome(newErr);
    return result_1;
  }

  var inner = input.val;

  if (isNone(inner)) {
    var result_2 = createNone();
    return result_2;
  }

  var innerInner = inner.val;
  var innerV = createOk(innerInner);
  var result = createSome(innerV);
  return result;
}