"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.andThenAsyncForOption = void 0;
var assert_1 = require("../internal/assert");
var ErrorMessage_1 = require("../internal/ErrorMessage");
var Option_1 = require("./Option");
var unwrap_1 = require("./unwrap");
/**
 *  Returns `None` if the _input_ is `None`,
 *  otherwise calls _transformer_ with the value and returns the result.
 *
 *  XXX:
 *  Some languages call this operation flatmap.
 *  But we don't provide `flatMap()` as alias of this function
 *  to sort with other APIs.
 */
function andThenAsyncForOption(input, transformer) {
    if (Option_1.isNone(input)) {
        return Promise.resolve(input);
    }
    var inner = unwrap_1.unwrapOption(input);
    var result = transformer(inner);
    // If this is async function, this always return Promise, but not.
    // We should check to clarify the error case if user call this function from plain js
    // and they mistake to use this.
    assert_1.assertIsPromise(result, ErrorMessage_1.ERR_MSG_TRANSFORMER_MUST_RETURN_PROMISE);
    return result;
}
exports.andThenAsyncForOption = andThenAsyncForOption;
