import { createOk, createErr, isErr } from "../PlainResult/Result.mjs";
import { isNone, createSome, createNone } from "./Option.mjs";
/**
 *  Transposes an `Option` of a `Result` into a `Result` of an `Option`.
 *
 *  - `Some(Ok(x))` -> `Ok(Some(x))`
 *  - `Some(Err(e))` -> `Err(e)`
 *  - `None` => `Ok(None)`
 */

export function transposeForOption(input) {
  if (isNone(input)) {
    var inner_1 = createNone();
    var result_1 = createOk(inner_1);
    return result_1;
  }

  var inner = input.val;

  if (isErr(inner)) {
    var e = inner.err;
    var result_2 = createErr(e);
    return result_2;
  }

  var innerInner = inner.val;
  var some = createSome(innerInner);
  var result = createOk(some);
  return result;
}