"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mapOrAsyncForOption = void 0;
var assert_1 = require("../internal/assert");
var ErrorMessage_1 = require("../internal/ErrorMessage");
var Option_1 = require("./Option");
var unwrap_1 = require("./unwrap");
/**
 *  Return the result of _transformer_ with using _input_ as an argument for it if _input_ is `Some(T)`.
 *  Otherwise, return _defaultValue_.
 *
 *  Basically, this operation is a combination `map()` and `unwrapOr()`.
 */
function mapOrAsyncForOption(input, defaultValue, transformer) {
    if (Option_1.isNone(input)) {
        return Promise.resolve(defaultValue);
    }
    var inner = unwrap_1.unwrapOption(input);
    var result = transformer(inner);
    // If this is async function, this always return Promise, but not.
    // We should check to clarify the error case if user call this function from plain js
    // and they mistake to use this.
    assert_1.assertIsPromise(result, ErrorMessage_1.ERR_MSG_TRANSFORMER_MUST_RETURN_PROMISE);
    return result;
}
exports.mapOrAsyncForOption = mapOrAsyncForOption;
