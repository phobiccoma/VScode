"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.unwrapOrElseAsync = exports.unwrapOrElse = exports.unwrapOr = exports.unwrapErr = exports.unwrap = exports.toOptionFromErr = exports.toOptionFromOk = exports.transpose = exports.tapBoth = exports.tapErr = exports.tapOk = exports.orElseAsync = exports.orElse = exports.or = exports.mapErrAsync = exports.mapErr = exports.mapOrElseAsync = exports.mapOrElse = exports.mapOrAsync = exports.mapOr = exports.mapAsync = exports.map = exports.flatten = exports.expectErr = exports.expect = exports.equal = exports.andThenAsync = exports.andThen = exports.and = exports.isErr = exports.isOk = exports.createErr = exports.createOk = void 0;
/**
 *  This module provies that the Result/Either type interface whose APIs are inspired
 *  by Rust's [`std::result::Result<T, E>`](https://doc.rust-lang.org/std/result/index.html).
 *
 *  We don't use a class to provides this module by these reason:
 *
 *  - Make treeshaking friendly.
 *      - Almost minifier cannot remove functions by default on `.prototype` even if they are unused.
 *  - Relax the incompatible problem by mixing multiple versions of this package
 *    in module dependency tree.
 *      - e.g. `instanceof` will be a problem. See ([#337](https://github.com/karen-irc/option-t/pull/337)).
 *
 *  And some operators might not return a new object and reuse the input
 *  to reduce an object allocation. Thus comparing _this `Option<T>`` is meaningless like a following code.
 *  This is by design because we think this pattern is meaningless.
 *
 *  ```typescript
 *      const a: Result<number, string> = createOk(1);
 *      const b: Result<number, string> = someOperator(a);
 *
 *      // Results of these comparison are undefined.
 *      a === b;
 *      Object.is(a, b);
 *  ```
 */
var Result_1 = require("./Result");
Object.defineProperty(exports, "createOk", { enumerable: true, get: function () { return Result_1.createOk; } });
Object.defineProperty(exports, "createErr", { enumerable: true, get: function () { return Result_1.createErr; } });
Object.defineProperty(exports, "isOk", { enumerable: true, get: function () { return Result_1.isOk; } });
Object.defineProperty(exports, "isErr", { enumerable: true, get: function () { return Result_1.isErr; } });
var and_1 = require("./and");
Object.defineProperty(exports, "and", { enumerable: true, get: function () { return and_1.andForResult; } });
var andThen_1 = require("./andThen");
Object.defineProperty(exports, "andThen", { enumerable: true, get: function () { return andThen_1.andThenForResult; } });
var andThenAsync_1 = require("./andThenAsync");
Object.defineProperty(exports, "andThenAsync", { enumerable: true, get: function () { return andThenAsync_1.andThenAsyncForResult; } });
var equal_1 = require("./equal");
Object.defineProperty(exports, "equal", { enumerable: true, get: function () { return equal_1.equalForResult; } });
var expect_1 = require("./expect");
Object.defineProperty(exports, "expect", { enumerable: true, get: function () { return expect_1.expectIsOk; } });
Object.defineProperty(exports, "expectErr", { enumerable: true, get: function () { return expect_1.expectIsErr; } });
var flatten_1 = require("./flatten");
Object.defineProperty(exports, "flatten", { enumerable: true, get: function () { return flatten_1.flattenForResult; } });
var map_1 = require("./map");
Object.defineProperty(exports, "map", { enumerable: true, get: function () { return map_1.mapForResult; } });
var mapAsync_1 = require("./mapAsync");
Object.defineProperty(exports, "mapAsync", { enumerable: true, get: function () { return mapAsync_1.mapAsyncForResult; } });
var mapOr_1 = require("./mapOr");
Object.defineProperty(exports, "mapOr", { enumerable: true, get: function () { return mapOr_1.mapOrForResult; } });
var mapOrAsync_1 = require("./mapOrAsync");
Object.defineProperty(exports, "mapOrAsync", { enumerable: true, get: function () { return mapOrAsync_1.mapOrAsyncForResult; } });
var mapOrElse_1 = require("./mapOrElse");
Object.defineProperty(exports, "mapOrElse", { enumerable: true, get: function () { return mapOrElse_1.mapOrElseForResult; } });
var mapOrElseAsync_1 = require("./mapOrElseAsync");
Object.defineProperty(exports, "mapOrElseAsync", { enumerable: true, get: function () { return mapOrElseAsync_1.mapOrElseAsyncForResult; } });
var mapErr_1 = require("./mapErr");
Object.defineProperty(exports, "mapErr", { enumerable: true, get: function () { return mapErr_1.mapErrForResult; } });
var mapErrAsync_1 = require("./mapErrAsync");
Object.defineProperty(exports, "mapErrAsync", { enumerable: true, get: function () { return mapErrAsync_1.mapErrAsyncForResult; } });
var or_1 = require("./or");
Object.defineProperty(exports, "or", { enumerable: true, get: function () { return or_1.orForResult; } });
var orElse_1 = require("./orElse");
Object.defineProperty(exports, "orElse", { enumerable: true, get: function () { return orElse_1.orElseForResult; } });
var orElseAsync_1 = require("./orElseAsync");
Object.defineProperty(exports, "orElseAsync", { enumerable: true, get: function () { return orElseAsync_1.orElseAsyncForResult; } });
var tap_1 = require("./tap");
Object.defineProperty(exports, "tapOk", { enumerable: true, get: function () { return tap_1.tapOk; } });
Object.defineProperty(exports, "tapErr", { enumerable: true, get: function () { return tap_1.tapErr; } });
Object.defineProperty(exports, "tapBoth", { enumerable: true, get: function () { return tap_1.tapBoth; } });
var transpose_1 = require("./transpose");
Object.defineProperty(exports, "transpose", { enumerable: true, get: function () { return transpose_1.transposeForResult; } });
var toOption_1 = require("./toOption");
Object.defineProperty(exports, "toOptionFromOk", { enumerable: true, get: function () { return toOption_1.toOptionFromOk; } });
Object.defineProperty(exports, "toOptionFromErr", { enumerable: true, get: function () { return toOption_1.toOptionFromErr; } });
var unwrap_1 = require("./unwrap");
Object.defineProperty(exports, "unwrap", { enumerable: true, get: function () { return unwrap_1.unwrapFromResult; } });
Object.defineProperty(exports, "unwrapErr", { enumerable: true, get: function () { return unwrap_1.unwrapErrFromResult; } });
var unwrapOr_1 = require("./unwrapOr");
Object.defineProperty(exports, "unwrapOr", { enumerable: true, get: function () { return unwrapOr_1.unwrapOrFromResult; } });
var unwrapOrElse_1 = require("./unwrapOrElse");
Object.defineProperty(exports, "unwrapOrElse", { enumerable: true, get: function () { return unwrapOrElse_1.unwrapOrElseFromResult; } });
var unwrapOrElseAsync_1 = require("./unwrapOrElseAsync");
Object.defineProperty(exports, "unwrapOrElseAsync", { enumerable: true, get: function () { return unwrapOrElseAsync_1.unwrapOrElseAsyncFromResult; } });
