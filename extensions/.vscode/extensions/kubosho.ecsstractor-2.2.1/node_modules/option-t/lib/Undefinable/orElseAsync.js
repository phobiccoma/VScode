"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.orElseAsyncForUndefinable = void 0;
var assert_1 = require("../internal/assert");
var ErrorMessage_1 = require("../internal/ErrorMessage");
var Undefinable_1 = require("./Undefinable");
/**
 *  Return _input_ as `T` if the passed _input_ is not `undefined`.
 *  Otherwise, return the result of _recoverer_.
 */
function orElseAsyncForUndefinable(input, recoverer) {
    if (Undefinable_1.isNotUndefined(input)) {
        return Promise.resolve(input);
    }
    var fallback = recoverer();
    // If this is async function, this always return Promise, but not.
    // We should check to clarify the error case if user call this function from plain js
    // and they mistake to use this.
    assert_1.assertIsPromise(fallback, ErrorMessage_1.ERR_MSG_RECOVERER_MUST_RETURN_PROMISE);
    return fallback;
}
exports.orElseAsyncForUndefinable = orElseAsyncForUndefinable;
